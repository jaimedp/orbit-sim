{"version":3,"file":null,"sources":["../../src/js/constants.js","../../src/js/universe.js","../../src/js/body.js","../../src/js/index.js"],"sourcesContent":["\nexport const AU = (149.6e6 * 1000);\nexport const G = 6.67428e-11;\n","import { AU } from './constants';\n\nexport default class Universe {\n  constructor(bodies) {\n    this.bodies = bodies;\n\n    // default to 1 day timestep\n    this.dt = 24*3600;\n  }\n\n  step() {\n    // calculate all the forces for all bodies... this is O(n^2)... watch out\n    for (const body of this.bodies) {\n      for (const other of this.bodies) {\n        if (body === other) {\n          continue;\n        }\n\n        const F = body.computeAttraction(other);\n        body.addForce(F.fx, F.fy);\n      }\n    }\n\n    // integrate new position for all bodies\n    this.bodies.forEach((b) => {\n      b.integrate(this.dt);\n    });\n  }\n\n  render(ctx, toScreen, options = {}) {\n    // render new pos\n    this.bodies.forEach((b) => b.render(ctx, toScreen));\n\n    if (options.info) {\n      const text = this.bodies.map((b) => {\n        return `${b.name}: Pos: ${(b.x/AU).toFixed(4)}, ${(b.y/AU).toFixed(4)}, Vel: ${(b.vx).toFixed(4)}, ${(b.vy).toFixed(4)}`;\n      }).join('<br>');\n      options.info.innerHTML = text;\n    }\n  }\n}\n","import { G, AU } from './constants';\n\nconst defaultOptions = Object.freeze({\n  color: '#f00'\n});\n\nexport default class Body {\n  constructor(mass = 1, name = 'Body', options = {}) {\n    this.name = name;\n    this.mass = mass;\n    this.options = Object.assign({}, defaultOptions, options);\n\n    this.rad = 5;\n\n    this.x = this.options.x || 0;\n    this.y = this.options.y || 0;\n    this.vx = this.options.vx || 0;\n    this.vy = this.options.vy || 0;\n\n    this.forces = { x: 0, y: 0 };\n    this.prevForces = { x: 0, y: 0 };\n\n  }\n\n  computeAttraction(other) {\n\n    const dx = other.x - this.x;\n    const dy = other.y - this.y;\n\n    const d2 = dx*dx + dy*dy;\n\n    if (d2 === 0) {\n      throw new Error('collision!');\n    }\n\n    // gravitational force between two bodies is:\n    // G * M1 * m2 / dist^2\n    const f = G * this.mass * other.mass / d2;\n\n    // now compute the components of the force\n    const t = Math.atan2(dy, dx);\n\n    return {\n      fx: Math.cos(t) * f,\n      fy: Math.sin(t) * f\n    };\n  }\n\n  addForce(fx, fy) {\n    this.forces.x += fx;\n    this.forces.y += fy;\n  }\n\n  // simple euler integration\n  integrate(dt) {\n    const fx = this.forces.x;\n    const fy = this.forces.y;\n\n    // v = v0 + F / M * dt\n    this.vx += fx / this.mass * dt;\n    this.vy += fy / this.mass * dt;\n\n    // p = p0 + v * dt\n    this.x += this.vx * dt;\n    this.y += this.vy * dt;\n\n    // keep track of the force for debugging\n    this.prevForces.x = this.forces.x;\n    this.prevForces.y = this.forces.y;\n\n    this.forces.x = 0;\n    this.forces.y = 0;\n  }\n\n  render(ctx, toScreen, options = {}) {\n    const pos = toScreen(this.x, this.y);\n\n    ctx.beginPath();\n    ctx.arc(pos.x, pos.y, this.rad, 0, 2 * Math.PI, false);\n    ctx.fillStyle = this.options.color;\n    ctx.fill();\n\n    if (options.debugForce) {\n      ctx.beginPath();\n      const scale = 1/1.0e19;\n      const _x = pos.x + this.prevForces.x * scale;\n      const _y = pos.y + this.prevForces.y * scale;\n      ctx.moveTo(pos.x, pos.y);\n      ctx.lineTo(_x, _y);\n      ctx.strokeStyle = 'red';\n      ctx.stroke();\n    }\n  }\n}\n","import Universe from './universe';\nimport Body from './body';\nimport {AU} from './constants';\n\nconst SCALE = 50 / AU;\n\nconst b1 = new Body(1.98892 * Math.pow(10, 30), 'sun', { color: 'yellow' });\nconst b2 = new Body(5.9742 * Math.pow(10, 24), 'earth', { color: 'blue', x: -1 * AU, vy: 29.783 * 1000 });\nconst b3 = new Body(4.8685 * Math.pow(10, 24), 'venus', {color: 'red', x: 0.723 * AU, vy: -35.02 * 1000 });\n\nconst universe = new Universe([b1, b2, b3]);\n\nconst canvas = document.getElementById('myCanvas');\nconst context = canvas.getContext('2d');\nconst centerX = canvas.width / 2;\nconst centerY = canvas.height / 2;\n\nconst toScreen = (x, y) => ({x: x * SCALE + centerX, y: centerY + y * SCALE});\nconst btn = document.getElementById('step');\n\nconst step = () => {\n  universe.step();\n  context.clearRect(0, 0, canvas.width, canvas.height);\n  universe.render(context, toScreen, {info: document.getElementById('info')});\n};\n\nsetInterval(() => step(), 16);\n\nbtn.addEventListener('click', () => {\n  step();\n});\n\n"],"names":["AU","G","Universe","bodies","dt","body","other","F","computeAttraction","addForce","fx","fy","forEach","b","integrate","ctx","toScreen","options","render","info","text","map","name","x","toFixed","y","vx","vy","join","innerHTML","defaultOptions","Object","freeze","Body","mass","assign","rad","forces","prevForces","dx","dy","d2","Error","f","t","Math","atan2","cos","sin","pos","beginPath","arc","PI","fillStyle","color","fill","debugForce","scale","_x","_y","moveTo","lineTo","strokeStyle","stroke","SCALE","b1","pow","b2","b3","universe","canvas","document","getElementById","context","getContext","centerX","width","centerY","height","btn","step","clearRect","setInterval","addEventListener"],"mappings":"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"}